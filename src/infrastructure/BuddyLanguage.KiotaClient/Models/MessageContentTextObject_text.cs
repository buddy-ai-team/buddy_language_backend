// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace OpenAI.GeneratedKiotaClient.Models {
    internal class MessageContentTextObject_text : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The annotations property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<MessageContentTextObject_text_annotations>? Annotations { get; set; }
#nullable restore
#else
        public List<MessageContentTextObject_text_annotations> Annotations { get; set; }
#endif
        /// <summary>The data that makes up the text.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Value { get; set; }
#nullable restore
#else
        public string Value { get; set; }
#endif
        /// <summary>
        /// Instantiates a new MessageContentTextObject_text and sets the default values.
        /// </summary>
        public MessageContentTextObject_text() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static MessageContentTextObject_text CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new MessageContentTextObject_text();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"annotations", n => { Annotations = n.GetCollectionOfObjectValues<MessageContentTextObject_text_annotations>(MessageContentTextObject_text_annotations.CreateFromDiscriminatorValue)?.ToList(); } },
                {"value", n => { Value = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<MessageContentTextObject_text_annotations>("annotations", Annotations);
            writer.WriteStringValue("value", Value);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes MessageContentTextAnnotationsFileCitationObject, MessageContentTextAnnotationsFilePathObject
        /// </summary>
        internal class MessageContentTextObject_text_annotations : IComposedTypeWrapper, IParsable {
            /// <summary>Composed type representation for type MessageContentTextAnnotationsFileCitationObject</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public OpenAI.GeneratedKiotaClient.Models.MessageContentTextAnnotationsFileCitationObject? MessageContentTextAnnotationsFileCitationObject { get; set; }
#nullable restore
#else
            public OpenAI.GeneratedKiotaClient.Models.MessageContentTextAnnotationsFileCitationObject MessageContentTextAnnotationsFileCitationObject { get; set; }
#endif
            /// <summary>Composed type representation for type MessageContentTextAnnotationsFilePathObject</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public OpenAI.GeneratedKiotaClient.Models.MessageContentTextAnnotationsFilePathObject? MessageContentTextAnnotationsFilePathObject { get; set; }
#nullable restore
#else
            public OpenAI.GeneratedKiotaClient.Models.MessageContentTextAnnotationsFilePathObject MessageContentTextAnnotationsFilePathObject { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static MessageContentTextObject_text_annotations CreateFromDiscriminatorValue(IParseNode parseNode) {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new MessageContentTextObject_text_annotations();
                if("MessageContentTextAnnotationsFileCitationObject".Equals(mappingValue, StringComparison.OrdinalIgnoreCase)) {
                    result.MessageContentTextAnnotationsFileCitationObject = new OpenAI.GeneratedKiotaClient.Models.MessageContentTextAnnotationsFileCitationObject();
                }
                else if("MessageContentTextAnnotationsFilePathObject".Equals(mappingValue, StringComparison.OrdinalIgnoreCase)) {
                    result.MessageContentTextAnnotationsFilePathObject = new OpenAI.GeneratedKiotaClient.Models.MessageContentTextAnnotationsFilePathObject();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
                if(MessageContentTextAnnotationsFileCitationObject != null) {
                    return MessageContentTextAnnotationsFileCitationObject.GetFieldDeserializers();
                }
                else if(MessageContentTextAnnotationsFilePathObject != null) {
                    return MessageContentTextAnnotationsFilePathObject.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer) {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(MessageContentTextAnnotationsFileCitationObject != null) {
                    writer.WriteObjectValue<OpenAI.GeneratedKiotaClient.Models.MessageContentTextAnnotationsFileCitationObject>(null, MessageContentTextAnnotationsFileCitationObject);
                }
                else if(MessageContentTextAnnotationsFilePathObject != null) {
                    writer.WriteObjectValue<OpenAI.GeneratedKiotaClient.Models.MessageContentTextAnnotationsFilePathObject>(null, MessageContentTextAnnotationsFilePathObject);
                }
            }
        }
    }
}

