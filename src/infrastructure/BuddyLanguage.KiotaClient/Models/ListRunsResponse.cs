// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace OpenAI.GeneratedKiotaClient.Models {
    internal class ListRunsResponse : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The data property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<RunObject>? Data { get; set; }
#nullable restore
#else
        public List<RunObject> Data { get; set; }
#endif
        /// <summary>The first_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstId { get; set; }
#nullable restore
#else
        public string FirstId { get; set; }
#endif
        /// <summary>The has_more property</summary>
        public bool? HasMore { get; set; }
        /// <summary>The last_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastId { get; set; }
#nullable restore
#else
        public string LastId { get; set; }
#endif
        /// <summary>The object property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Object { get; set; }
#nullable restore
#else
        public string Object { get; set; }
#endif
        /// <summary>
        /// Instantiates a new ListRunsResponse and sets the default values.
        /// </summary>
        public ListRunsResponse() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static ListRunsResponse CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new ListRunsResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"data", n => { Data = n.GetCollectionOfObjectValues<RunObject>(RunObject.CreateFromDiscriminatorValue)?.ToList(); } },
                {"first_id", n => { FirstId = n.GetStringValue(); } },
                {"has_more", n => { HasMore = n.GetBoolValue(); } },
                {"last_id", n => { LastId = n.GetStringValue(); } },
                {"object", n => { Object = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<RunObject>("data", Data);
            writer.WriteStringValue("first_id", FirstId);
            writer.WriteBoolValue("has_more", HasMore);
            writer.WriteStringValue("last_id", LastId);
            writer.WriteStringValue("object", Object);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}

